name: Build and Release

on:
  push:
    tags:
      - 'v*'
  workflow_dispatch:
    inputs:
      version:
        description: 'Version tag (e.g., v2.2.4)'
        required: true
        default: 'v2.2.4'

jobs:
  build:
    runs-on: macos-13
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Set up Xcode
      run: |
        sudo xcode-select -s /Applications/Xcode.app/Contents/Developer
        xcodebuild -version
    
    
    - name: Build Universal Binary
      run: |
        # Build for Release configuration
        xcodebuild -project "⌘英かな.xcodeproj" \
          -scheme "⌘英かな" \
          -configuration Release \
          -archivePath "${{ github.workspace }}/build/cmd-eikana.xcarchive" \
          ARCHS="x86_64 arm64" \
          ONLY_ACTIVE_ARCH=NO \
          archive
    
    - name: Extract App from Archive
      run: |
        # Copy the app from the archive
        mkdir -p "${{ github.workspace }}/build/export"
        cp -R "${{ github.workspace }}/build/cmd-eikana.xcarchive/Products/Applications/⌘英かな.app" \
              "${{ github.workspace }}/build/export/"
        
        # Remove any existing signatures
        codesign --remove-signature "${{ github.workspace }}/build/export/⌘英かな.app" || true
        
        # Ad-hoc sign the app with hardened runtime and timestamp
        codesign --force --deep --sign - \
          --options runtime \
          --timestamp \
          --entitlements - \
          "${{ github.workspace }}/build/export/⌘英かな.app" <<EOF
        <?xml version="1.0" encoding="UTF-8"?>
        <!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
        <plist version="1.0">
        <dict>
          <key>com.apple.security.automation.apple-events</key>
          <true/>
        </dict>
        </plist>
        EOF
        
        # Verify the signature
        codesign --verify --verbose "${{ github.workspace }}/build/export/⌘英かな.app"
    
    - name: Verify Universal Binary
      run: |
        # Check that the app is a universal binary
        lipo -info "${{ github.workspace }}/build/export/⌘英かな.app/Contents/MacOS/⌘英かな"
    
    - name: Create DMG
      run: |
        # Create a temporary directory for DMG contents
        mkdir -p dmg_contents
        cp -R "${{ github.workspace }}/build/export/⌘英かな.app" dmg_contents/
        
        # Create a simple instruction file
        cat > dmg_contents/インストール方法.txt <<EOF
        ⌘英かな インストール方法

        1. ⌘英かな.app を Applications フォルダにドラッグしてください

        2. 初回起動時の注意:
           - Controlキーを押しながらアプリをクリック（または右クリック）
           - 「開く」を選択
           - 警告ダイアログで「開く」をクリック

        3. アクセシビリティの許可:
           - システム設定 > プライバシーとセキュリティ > アクセシビリティ
           - ⌘英かな.app にチェックを入れる

        詳細: https://github.com/yukifoo/cmd-eikana
        EOF
        
        # Create DMG
        hdiutil create -volname "⌘英かな" \
          -srcfolder dmg_contents \
          -ov -format UDZO \
          "${{ github.workspace }}/cmd-eikana.dmg"
        
        # Sign the DMG
        codesign --force --sign - "${{ github.workspace }}/cmd-eikana.dmg"
    
    - name: Calculate SHA256
      id: sha256
      run: |
        SHA256=$(shasum -a 256 "${{ github.workspace }}/cmd-eikana.dmg" | awk '{print $1}')
        echo "sha256=$SHA256" >> $GITHUB_OUTPUT
        echo "SHA256: $SHA256"
    
    - name: Create Release
      if: startsWith(github.ref, 'refs/tags/')
      uses: softprops/action-gh-release@v1
      with:
        files: |
          cmd-eikana.dmg
        draft: false
        prerelease: false
        body: |
          ## ⌘英かな (cmd-eikana)
          
          Universal Binary (Intel + Apple Silicon) build of cmd-eikana.
          
          ### Installation via Homebrew
          ```bash
          brew tap yukifoo/tap
          brew install --cask cmd-eikana
          ```
          
          ### Manual Installation
          1. Download `cmd-eikana.dmg`
          2. Open the DMG file
          3. Drag ⌘英かな.app to Applications folder
          
          ### 初回起動時の手順 / First Launch
          macOSのセキュリティ機能により、初回起動時は以下の手順が必要です：
          
          1. **Controlキーを押しながら** ⌘英かな.app をクリック（または右クリック）
          2. 「開く」を選択
          3. 警告ダイアログで「開く」をクリック
          
          ### アクセシビリティの許可 / Accessibility Permission
          システム設定 > プライバシーとセキュリティ > アクセシビリティ で
          ⌘英かな.app にチェックを入れてください。
          
          ### Checksum
          SHA256: `${{ steps.sha256.outputs.sha256 }}`
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    
    - name: Upload Artifact
      if: github.event_name == 'workflow_dispatch'
      uses: actions/upload-artifact@v4
      with:
        name: cmd-eikana-universal
        path: |
          cmd-eikana.dmg